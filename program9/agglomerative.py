# -*- coding: utf-8 -*-
"""agglomerative.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1g6cZWrWontsDR5_4AkkTw5Vn3wXdW4aY

Agglomerative Clustering -> Single linkage, complete linkage
"""

#import necessary libraries
import numpy as np
import matplotlib.pyplot as plt
#from scipy.cluster.hierachy import dendrogram,linkage
from scipy.cluster.hierarchy import dendrogram, linkage
from sklearn.datasets import load_iris
#from sklearn.datasets import load_iris
import seaborn as sns

#load dataset
iris = load_iris()
data = iris.data[:6]

def proximity_matrix(data):
  n = data.shape[0]
  proximity_matrix = np.zeros((n,n))
  for i in range(n):
    for j in range(i+1,n):
      proximity_matrix[i,j] = np.linalg.norm(data[i] - data[j])
      proximity_matrix[j,i] = proximity_matrix[i,j]
  return proximity_matrix

def plot_dendrogram(data,method):
  linkage_matrix = linkage(data,method = method)
  dendrogram(linkage_matrix)
  plt.title(f'dendrogram - {method} linkage')
  plt.xlabel('Data point')
  plt.ylabel('Distance')
  plt.show()

def plot_correlation_matrix(data):
  corr_matrix = np.corrcoef(data.T)
  plt.figure(figsize(12,12))
  sns.heatmap(corr_matrix,annot = True,cmap = 'coolwarm')
  plt.title('correlation matrix')
  plt.show()

print('proximity matrix')
print(proximity_matrix(data))
plot_dendrogram(data,'single')
plot_dendrogram(data,'complete')